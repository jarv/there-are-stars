# Generate the story text and then publish it to Github Pages
name: Publish the story

on:
  # Trigger on push to main or every N minutes
  push:
    branches: [ "main" ]
  schedule:
    - cron: "*/10 * * * *"

  # Or manually
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true


jobs:

  # Render the story and upload it as an artifact
  tell:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'
      - run: poetry install
      - shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: poetry run python app.py

      - uses: actions/upload-artifact@v3
        with:
          name: story
          path: ./index.html

  publish:
    needs: tell
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    # Permissions required for Github Pages in forks
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - uses: actions/download-artifact@v3
        with:
          name: story
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
